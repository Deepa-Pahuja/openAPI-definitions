swagger: '2.0'
info:
  description: |
    This is a simple Tag microservice.
  version: 1.0.0
  title: swagger Tag
# host: petstore.swagger.io
# basePath: /v2
tags:
- name: tag
  description: Everything about your Tags
# schemes:
# - http
paths:
  /tags:
    get:
      tags:
      - tag
      summary: Get all available tags
      description: Returns tags as a list
      operationId: getTags
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Tags'
        404:
          description: Tags not found          
  
    post:
      tags:
      - tag
      summary: Add a new tag
      operationId: addTag
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: tag string that needs to be added
        required: true
        schema:
          type: string
      responses:
        200:
          description: Tag successfully created
        405:
          description: Invalid input
    put:
      tags:
      - tag
      summary: Update an existing tag
      operationId: updateTag
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Tag object that needs to be added
        required: true
        schema:
          $ref: '#/definitions/Tag'
      responses:
        200:
          description: Tag successfully updated
        400:
          description: Invalid ID supplied
        404:
          description: Tag not found
        405:
          description: Validation exception
  /tags/{tagId}:
    get:
      tags:
      - tag
      summary: Find tag by ID
      description: Returns a single tag
      operationId: getTagById
      produces:
      - application/json
      parameters:
      - name: tagId
        in: path
        description: ID of tag to return
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Tag'
        400:
          description: Invalid ID supplied
        404:
          description: Tag not found
    delete:
      tags:
      - tag
      summary: Deletes a tag
      operationId: deleteTag
      produces:
      - application/json
      - application/xml
      parameters:
      - name: tagId
        in: path
        description: Tag id to delete
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: successful operation
        400:
          description: Invalid ID supplied
        404:
          description: Tag not found

definitions:
  Tag:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
  Tags:
    type: array
    items:
      type: string
      
      

# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
# basePath: /Personal3192/Tags/1.0.0
schemes:
 - https
 - http
# Added by API Auto Mocking Plugin
# basePath: /ozgurakan/test/1.0.0
# Added by API Auto Mocking Plugin
basePath: /Personal3192/Tags/1.0.0
